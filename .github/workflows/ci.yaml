name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  mypy:
    name: mypy ${{ matrix.py }} on ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - windows-latest  # WindowsPath
          - ubuntu-latest  # PosixPath
        py:
          - "3.8"  # oldest supported
          - "3.12"  # newest supported
          - "3.13-dev"  # next

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install -U pip
          python -m pip install -U -r requirements.txt
          python -m pip install -U mypy certifi types-certifi types-jsonschema
      - name: Run mypy
        shell: bash
        run: |
          python -m mypy --strict pack_checker.py

  check-example-pack:
    name: Check examples with py${{ matrix.py }} on ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            py: "3.8"  # oldest supported
          - os: ubuntu-latest
            py: "3.9"
          - os: macos-latest
            py: "3.10"
          - os: ubuntu-latest
            py: "3.12"  # newest supported
          - os: ubuntu-latest
            py: "3.13-dev"  # next

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install -U pip -r requirements.txt
      - name: Checkout PopTracker files
        uses: actions/checkout@v4
        with:
          repository: black-sliver/PopTracker
          path: PopTracker
          sparse-checkout: |
            schema
            examples
      - name: Checkout template pack
        shell: bash
        run: |
          cd PopTracker
          git submodule update --init examples/template_pack
      - name: Check an example (live schema)
        shell: bash
        run: |
          python pack_checker.py --batch --strict PopTracker/examples/uat-example
      - name: Check an example (upstream schema)
        shell: bash
        run: |
          python pack_checker.py --batch --schema PopTracker/schema/packs --strict PopTracker/examples/uat-example
      - name: Zip an example and template pack (Windows)
        if: runner.os == 'Windows'
        run: |
          cd PopTracker/examples
          Compress-Archive -Path template_pack -Destination template_pack.zip  # folder in zip
          Compress-Archive -Path uat-example -Destination uat-example1.zip   # folder in zip
          cd uat-example
          Compress-Archive -Path * -Destination ../uat-example2.zip  # files directly in zip
      - name: Zip an example and template pack (Non-windows)
        if: runner.os != 'Windows'
        run: |
          cd PopTracker/examples
          zip -r template_pack.zip template_pack  # folder in zip
          zip -r uat-example1.zip uat-example  # folder in zip
          cd uat-example
          zip -r ../uat-example2.zip *  # files directly in zip
      - name: Check an example (zip)
        shell: bash
        run: |
          python pack_checker.py --batch --schema PopTracker/schema/packs --strict PopTracker/examples/uat-example1.zip
          python pack_checker.py --batch --schema PopTracker/schema/packs --strict PopTracker/examples/uat-example2.zip
      - name: Check template pack
        shell: bash
        run: |
          python pack_checker.py --batch --schema PopTracker/schema/packs --strict PopTracker/examples/template_pack
          python pack_checker.py --batch --schema PopTracker/schema/packs --strict PopTracker/examples/template_pack.zip
